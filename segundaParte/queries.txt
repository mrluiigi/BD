UERIES EM MONGODB


-------------Área total das plantações (é preciso atributo para saber se foi colhida)--------------
db.plantacao.aggregate([{$group: {_id: null, Areatotal:{$sum: "$Area"}}}])

-------------Produtos do animal x---------------
db.ProdutoAnimal.find({Origem: 2})

----------------------Recursos consumidos pela Plantação dada--------------------------
db.Plantacao.find({_id : 1}, {"RecursosConsumidos.quantidadeConsumida": 1}).pretty()

----------------------Recursos consumidos pelo animal dado (substituir 1 pelo id pretendido)------------
db.Animais.find({_id : 1}, {"RecursosConsumidos.quantidadeConsumida": 1})

----------------------Funcionários da Plantação X (substituir 3 pela plantação pretendida)----------------
db.Funcionario.find({ListaPlantacoes: { $all : [3]}})

----------------------Número de animais da espécie X----------------------------------
db.Animais.find({Especie : "Vaca minhota", Vida: "V"}).count()
-----------------------Que espécies consomem o recurso X (Onde tem _id: 1 substituir por valor)-----------------------
db.Animais.distinct("Especie", {RecursosConsumidos: {$elemMatch: {_id: 1}}})

-- Quantas espécies de animais existem na quinta
db.Animais.distinct("Especie").length


-- Número de encomendas feitas
db.Encomendas.find().length()


-- Adiciona ao stock de um certo recurso uma quantidade
db.Recursos.update({'_id':*INSERIR ID*},{$inc:{'Stock':*INSERIR QUANTIDADE A INCREMENTAR*}})


-- Quantidade em stock do produtoanimal X
db.ProdutosAnimais.find({'_id':*INSERIR ID*},{'Stock':1,'_id':0})


-- Quantidade em stock do produtovegetal X
db.ProdutosVegetais.find({'_id':*INSERIR ID*},{'Stock':1,'_id':0})


-- Quantidade em Stock do recurso X
db.Recursos.find({'_id':*INSERIR ID*},{'Stock':1,'_id':0})


-- Que funcionario cuidou do Animal X
db.Funcionarios.find({'ListaAnimais':*INSERIR ID*},{'_id':1, 'Nome':1})


-- Valor total das vendas de um cliente
db.Encomendas.aggregate([{$match:{'Cliente':*INSERIR ID*}},{$group: {'_id': '$Cliente', Valortotal:{$sum: '$Valor'}}}])


-- Altera validade da vacina +2 anos
db.Animais.update({'_id':20},{$set:{ValidadeVacina: new Date(ISODate().getTime()+2*365*24*60*60*1000)}})


-- Plantações a colher no mês indicado
db.Plantacoes.find({'MesColheita':*INSERIR MÊS*}).pretty()


-- Soma das vendas num intervalo de tempo
db.Encomendas.aggregate([{$match:{'Data':{$gte:new Date("2018-10-03"),$lte:new Date("2018-10-03")}}},{$group: {'_id': null, Valortotal:{$sum: '$Valor'}}}])

--------------Transações--------


-- Adiciona Cliente
db.Clientes.insert({_id : 14, Nome: "Manel Dias", Tipo: "I", Contacto: 9231568837, Encomendas: [3, 4]})


-- Adiciona Produto Animal (new Date(Ano, mês - 1, dia, horas, minutos), pode-se omitir a parte das horas e minutos)
db.ProdutosAnimais.insert({_id: 36, Designacao: "Leite de Vaca", Preco: 1.19, Stock: 10, Validade: new Date(2020, 05, 12, 14, 12), Origem: 4})

-- Adiciona Produto Vegetal( Data atual + 7 dias )
db.ProdutosVegetais.insert({_id: 12, Designacao: "Girasois", Preco: 0.5, Stock: 20, Validade: new Date(ISODate().getTime() + 7*24*60*60*1000), Origem: 4})

-- Altera salario de funcionário
db.Funcionarios.update({_id: 11}, {$set:{Salario: 1100}})

-- Altera Horário de funcionário
db.Funcionarios.update({_id: 11}, {$set:{Horário: "S"}})

-- Altera informação de cliente
db.Clientes.update({_id: 22}, {$set: {Nome: "Manel Dias", Tipo: "I", Contacto: 923451809}})